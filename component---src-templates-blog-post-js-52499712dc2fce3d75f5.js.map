{"version":3,"file":"component---src-templates-blog-post-js-52499712dc2fce3d75f5.js","mappings":"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","sources":["webpack://devrocket/./src/components/GetFree.js","webpack://devrocket/./src/components/YouTubeVideo.js","webpack://devrocket/./src/components/bio.js","webpack://devrocket/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst GetFree = () => {\n\n  return (\n    <div className=\"section-padding get-free\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">Want to boost your TypeScript knowledge, fast?</h2>\n        <p><em>üëâ Get the <b>FREE</b> guide. üëà</em></p>\n        <br/>\n        <h3>TypeScript Essentials: 5 Critical Keys to Using TypeScript Effectively</h3>\n        \n        <div className=\"section-padding\">\n        <button className=\"button button-info button-medium hover-grow\">\n          {/* alternate signup form https://mailchi.mp/93f51d833d92/free-typescript-essentials-guide */}\n          <Link to=\"/typescript-essentials-free-guide\">Get Your FREE Guide</Link>\n        </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default GetFree;\n","import * as React from \"react\"\n\nconst YouTubeVideo = ({ videoId, title, className }) => {\n  const classes = className || \"card wow fadeInLeft video-container\";\n  const titleToShow = title || \"YouTube video player\";\n    \n  return (\n    <div className={classes} data-wow-delay=\"0.3s\">\n      <iframe className=\"youtube-video\" src={`https://www.youtube.com/embed/${videoId}?controls=0`} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\" allowfullscreen></iframe>\n    </div>\n  )\n}\n\nexport default YouTubeVideo;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            linkedin\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <div>\n        <StaticImage\n          className=\"bio-avatar\"\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          src=\"../img/about/headshot.jpg\"\n          width={50}\n          height={50}\n          quality={95}\n          alt=\"Profile picture\"\n        />\n      </div>\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://linkedin.com/in/${social?.linkedin || ``}`}>\n            üëâ Follow me on LinkedIn!\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport GetFree from \"../components/GetFree\"\nimport YouTubeVideo from \"../components/YouTubeVideo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const featuredImg = getImage(post.frontmatter.featuredImage?.childImageSharp?.gatsbyImageData)\n  const isExclusive = post.frontmatter.type === \"exclusive\";\n  const youTubeVideo = post.frontmatter.youTubeVideo;\n  const repository = post.frontmatter.repository;\n\n  const hero = youTubeVideo \n    ? <YouTubeVideo videoId={youTubeVideo} />\n    : featuredImg && <GatsbyImage image={featuredImg} className=\"my-5\" />\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post content-container\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <h4 itemProp=\"headline\">{post.frontmatter.description}</h4>\n          <p className=\"date\">{post.frontmatter.date}</p>\n\n          {\n            hero\n          }\n          <br/>\n        </header>\n        {\n          repository && <>\n            <button class=\"button button-info button-medium hover-grow\">\n              <a href={repository}>\n                Code on GitHub\n              </a>\n            </button>  üëà Get the Code on GitHub\n          </>\n        }\n        <br/>\n        {\n          youTubeVideo && <>\n            <button class=\"button button-info button-medium hover-grow\">\n              <a href={`https://www.youtube.com/watch?v=${youTubeVideo}`}>\n                YouTube Video\n              </a>\n            </button>  üëà Watch the Video on YouTube\n          </>\n        }\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n\n          {/* navigation */}\n          {\n            !isExclusive && <nav className=\"blog-post-nav\">\n              <ul\n                style={{\n                  display: `flex`,\n                  flexWrap: `wrap`,\n                  justifyContent: `space-between`,\n                  listStyle: `none`,\n                  padding: 0,\n                }}\n              >\n                <li>\n                  {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                      ‚Üê {previous.frontmatter.title}\n                    </Link>\n                  )}\n                </li>\n                <li>\n                  {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                      {next.frontmatter.title} ‚Üí\n                    </Link>\n                  )}\n                </li>\n              </ul>\n            </nav>\n          }\n\n          {/* free download section */}\n          <GetFree />\n\n          {/* bio section */}\n          <Bio />\n\n        </footer>\n      </article>\n      \n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 900, height: 600)\n          }\n        }\n        type\n        youTubeVideo\n        repository\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["className","Link","to","videoId","title","classes","src","frameborder","allow","allowfullscreen","data","useStaticQuery","author","site","siteMetadata","social","S","layout","formats","width","height","quality","alt","name","summary","href","linkedin","Head","markdownRemark","post","frontmatter","description","excerpt","previous","next","location","siteTitle","featuredImg","getImage","featuredImage","childImageSharp","gatsbyImageData","isExclusive","type","youTubeVideo","repository","hero","G","image","itemScope","itemType","itemProp","date","class","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}